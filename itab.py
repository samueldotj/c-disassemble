
# itab.py -- auto generated by opgen.py, do not edit. 

from inst import *
from operand import *


ITAB__VENDOR_INDX__AMD = 0
ITAB__VENDOR_INDX__INTEL = 1


ITAB__MODE_INDX__16 = 0
ITAB__MODE_INDX__32 = 1
ITAB__MODE_INDX__64 = 2


ITAB__MOD_INDX__NOT_11 = 0
ITAB__MOD_INDX__11 = 1


ITAB__0F = 0
ITAB__0F__OP_00__REG = 1
ITAB__0F__OP_01__REG = 2
ITAB__0F__OP_01__REG__OP_00__MOD = 3
ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM = 4
ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM__OP_01__VENDOR = 5
ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM__OP_03__VENDOR = 6
ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM__OP_04__VENDOR = 7
ITAB__0F__OP_01__REG__OP_01__MOD = 8
ITAB__0F__OP_01__REG__OP_01__MOD__OP_01__RM = 9
ITAB__0F__OP_01__REG__OP_02__MOD = 10
ITAB__0F__OP_01__REG__OP_03__MOD = 11
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM = 12
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_00__VENDOR = 13
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_01__VENDOR = 14
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_02__VENDOR = 15
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_03__VENDOR = 16
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_04__VENDOR = 17
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_05__VENDOR = 18
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_06__VENDOR = 19
ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_07__VENDOR = 20
ITAB__0F__OP_01__REG__OP_04__MOD = 21
ITAB__0F__OP_01__REG__OP_06__MOD = 22
ITAB__0F__OP_01__REG__OP_07__MOD = 23
ITAB__0F__OP_01__REG__OP_07__MOD__OP_01__RM = 24
ITAB__0F__OP_01__REG__OP_07__MOD__OP_01__RM__OP_01__VENDOR = 25
ITAB__0F__OP_0D__REG = 26
ITAB__0F__OP_18__REG = 27
ITAB__0F__OP_71__REG = 28
ITAB__0F__OP_72__REG = 29
ITAB__0F__OP_73__REG = 30
ITAB__0F__OP_AE__REG = 31
ITAB__0F__OP_AE__REG__OP_05__MOD = 32
ITAB__0F__OP_AE__REG__OP_05__MOD__OP_01__RM = 33
ITAB__0F__OP_AE__REG__OP_06__MOD = 34
ITAB__0F__OP_AE__REG__OP_06__MOD__OP_01__RM = 35
ITAB__0F__OP_AE__REG__OP_07__MOD = 36
ITAB__0F__OP_AE__REG__OP_07__MOD__OP_01__RM = 37
ITAB__0F__OP_BA__REG = 38
ITAB__0F__OP_C7__REG = 39
ITAB__0F__OP_C7__REG__OP_00__VENDOR = 40
ITAB__0F__OP_C7__REG__OP_07__VENDOR = 41
ITAB__0F__OP_D9__MOD = 42
ITAB__0F__OP_D9__MOD__OP_01__X87 = 43
ITAB__1BYTE = 44
ITAB__1BYTE__OP_60__OSIZE = 45
ITAB__1BYTE__OP_61__OSIZE = 46
ITAB__1BYTE__OP_63__MODE = 47
ITAB__1BYTE__OP_6D__OSIZE = 48
ITAB__1BYTE__OP_6F__OSIZE = 49
ITAB__1BYTE__OP_80__REG = 50
ITAB__1BYTE__OP_81__REG = 51
ITAB__1BYTE__OP_82__REG = 52
ITAB__1BYTE__OP_83__REG = 53
ITAB__1BYTE__OP_8F__REG = 54
ITAB__1BYTE__OP_98__OSIZE = 55
ITAB__1BYTE__OP_99__OSIZE = 56
ITAB__1BYTE__OP_9C__MODE = 57
ITAB__1BYTE__OP_9C__MODE__OP_00__OSIZE = 58
ITAB__1BYTE__OP_9C__MODE__OP_01__OSIZE = 59
ITAB__1BYTE__OP_9D__MODE = 60
ITAB__1BYTE__OP_9D__MODE__OP_00__OSIZE = 61
ITAB__1BYTE__OP_9D__MODE__OP_01__OSIZE = 62
ITAB__1BYTE__OP_A5__OSIZE = 63
ITAB__1BYTE__OP_A7__OSIZE = 64
ITAB__1BYTE__OP_AB__OSIZE = 65
ITAB__1BYTE__OP_AD__OSIZE = 66
ITAB__1BYTE__OP_AE__MOD = 67
ITAB__1BYTE__OP_AE__MOD__OP_00__REG = 68
ITAB__1BYTE__OP_AF__OSIZE = 69
ITAB__1BYTE__OP_C0__REG = 70
ITAB__1BYTE__OP_C1__REG = 71
ITAB__1BYTE__OP_C6__REG = 72
ITAB__1BYTE__OP_C7__REG = 73
ITAB__1BYTE__OP_CF__OSIZE = 74
ITAB__1BYTE__OP_D0__REG = 75
ITAB__1BYTE__OP_D1__REG = 76
ITAB__1BYTE__OP_D2__REG = 77
ITAB__1BYTE__OP_D3__REG = 78
ITAB__1BYTE__OP_D8__MOD = 79
ITAB__1BYTE__OP_D8__MOD__OP_00__REG = 80
ITAB__1BYTE__OP_D8__MOD__OP_01__X87 = 81
ITAB__1BYTE__OP_D9__MOD = 82
ITAB__1BYTE__OP_D9__MOD__OP_00__REG = 83
ITAB__1BYTE__OP_D9__MOD__OP_01__X87 = 84
ITAB__1BYTE__OP_DA__MOD = 85
ITAB__1BYTE__OP_DA__MOD__OP_00__REG = 86
ITAB__1BYTE__OP_DA__MOD__OP_01__X87 = 87
ITAB__1BYTE__OP_DB__MOD = 88
ITAB__1BYTE__OP_DB__MOD__OP_00__REG = 89
ITAB__1BYTE__OP_DB__MOD__OP_01__X87 = 90
ITAB__1BYTE__OP_DC__MOD = 91
ITAB__1BYTE__OP_DC__MOD__OP_00__REG = 92
ITAB__1BYTE__OP_DC__MOD__OP_01__X87 = 93
ITAB__1BYTE__OP_DD__MOD = 94
ITAB__1BYTE__OP_DD__MOD__OP_00__REG = 95
ITAB__1BYTE__OP_DD__MOD__OP_01__X87 = 96
ITAB__1BYTE__OP_DE__MOD = 97
ITAB__1BYTE__OP_DE__MOD__OP_00__REG = 98
ITAB__1BYTE__OP_DE__MOD__OP_01__X87 = 99
ITAB__1BYTE__OP_DF__MOD = 100
ITAB__1BYTE__OP_DF__MOD__OP_00__REG = 101
ITAB__1BYTE__OP_DF__MOD__OP_01__X87 = 102
ITAB__1BYTE__OP_E3__ASIZE = 103
ITAB__1BYTE__OP_F6__REG = 104
ITAB__1BYTE__OP_F7__REG = 105
ITAB__1BYTE__OP_FE__REG = 106
ITAB__1BYTE__OP_FF__REG = 107
ITAB__3DNOW = 108
ITAB__PFX_SSE66__0F = 109
ITAB__PFX_SSE66__0F__OP_71__REG = 110
ITAB__PFX_SSE66__0F__OP_72__REG = 111
ITAB__PFX_SSE66__0F__OP_73__REG = 112
ITAB__PFX_SSE66__0F__OP_C7__REG = 113
ITAB__PFX_SSE66__0F__OP_C7__REG__OP_00__VENDOR = 114
ITAB__PFX_SSEF2__0F = 115
ITAB__PFX_SSEF3__0F = 116
ITAB__PFX_SSEF3__0F__OP_C7__REG = 117
ITAB__PFX_SSEF3__0F__OP_C7__REG__OP_07__VENDOR = 118


operator = [
  '3dnow',
  'aaa',
  'aad',
  'aam',
  'aas',
  'adc',
  'add',
  'addpd',
  'addps',
  'addsd',
  'addss',
  'addsubpd',
  'addsubps',
  'and',
  'andpd',
  'andps',
  'andnpd',
  'andnps',
  'arpl',
  'movsxd',
  'bound',
  'bsf',
  'bsr',
  'bswap',
  'bt',
  'btc',
  'btr',
  'bts',
  'call',
  'cbw',
  'cwde',
  'cdqe',
  'clc',
  'cld',
  'clflush',
  'clgi',
  'cli',
  'clts',
  'cmc',
  'cmovo',
  'cmovno',
  'cmovb',
  'cmovae',
  'cmovz',
  'cmovnz',
  'cmovbe',
  'cmova',
  'cmovs',
  'cmovns',
  'cmovp',
  'cmovnp',
  'cmovl',
  'cmovge',
  'cmovle',
  'cmovg',
  'cmp',
  'cmppd',
  'cmpps',
  'cmpsb',
  'cmpsw',
  'cmpsd',
  'cmpsq',
  'cmpss',
  'cmpxchg',
  'cmpxchg8b',
  'comisd',
  'comiss',
  'cpuid',
  'cvtdq2pd',
  'cvtdq2ps',
  'cvtpd2dq',
  'cvtpd2pi',
  'cvtpd2ps',
  'cvtpi2ps',
  'cvtpi2pd',
  'cvtps2dq',
  'cvtps2pi',
  'cvtps2pd',
  'cvtsd2si',
  'cvtsd2ss',
  'cvtsi2ss',
  'cvtss2si',
  'cvtss2sd',
  'cvttpd2pi',
  'cvttpd2dq',
  'cvttps2dq',
  'cvttps2pi',
  'cvttsd2si',
  'cvtsi2sd',
  'cvttss2si',
  'cwd',
  'cdq',
  'cqo',
  'daa',
  'das',
  'dec',
  'div',
  'divpd',
  'divps',
  'divsd',
  'divss',
  'emms',
  'enter',
  'f2xm1',
  'fabs',
  'fadd',
  'faddp',
  'fbld',
  'fbstp',
  'fchs',
  'fclex',
  'fcmovb',
  'fcmove',
  'fcmovbe',
  'fcmovu',
  'fcmovnb',
  'fcmovne',
  'fcmovnbe',
  'fcmovnu',
  'fucomi',
  'fcom',
  'fcom2',
  'fcomp3',
  'fcomi',
  'fucomip',
  'fcomip',
  'fcomp',
  'fcomp5',
  'fcompp',
  'fcos',
  'fdecstp',
  'fdiv',
  'fdivp',
  'fdivr',
  'fdivrp',
  'femms',
  'ffree',
  'ffreep',
  'ficom',
  'ficomp',
  'fild',
  'fncstp',
  'fninit',
  'fiadd',
  'fidivr',
  'fidiv',
  'fisub',
  'fisubr',
  'fist',
  'fistp',
  'fisttp',
  'fld',
  'fld1',
  'fldl2t',
  'fldl2e',
  'fldlpi',
  'fldlg2',
  'fldln2',
  'fldz',
  'fldcw',
  'fldenv',
  'fmul',
  'fmulp',
  'fimul',
  'fnop',
  'fpatan',
  'fprem',
  'fprem1',
  'fptan',
  'frndint',
  'frstor',
  'fnsave',
  'fscale',
  'fsin',
  'fsincos',
  'fsqrt',
  'fstp',
  'fstp1',
  'fstp8',
  'fstp9',
  'fst',
  'fnstcw',
  'fnstenv',
  'fnstsw',
  'fsub',
  'fsubp',
  'fsubr',
  'fsubrp',
  'ftst',
  'fucom',
  'fucomp',
  'fucompp',
  'fxam',
  'fxch',
  'fxch4',
  'fxch7',
  'fxrstor',
  'fxsave',
  'fpxtract',
  'fyl2x',
  'fyl2xp1',
  'haddpd',
  'haddps',
  'hlt',
  'hsubpd',
  'hsubps',
  'idiv',
  'in',
  'imul',
  'inc',
  'insb',
  'insw',
  'insd',
  'int1',
  'int3',
  'int',
  'into',
  'invd',
  'invlpg',
  'invlpga',
  'iretw',
  'iretd',
  'iretq',
  'jo',
  'jno',
  'jb',
  'jae',
  'jz',
  'jnz',
  'jbe',
  'ja',
  'js',
  'jns',
  'jp',
  'jnp',
  'jl',
  'jge',
  'jle',
  'jg',
  'jcxz',
  'jecxz',
  'jrcxz',
  'jmp',
  'lahf',
  'lar',
  'lddqu',
  'ldmxcsr',
  'lds',
  'lea',
  'les',
  'lfs',
  'lgs',
  'lidt',
  'lss',
  'leave',
  'lfence',
  'lgdt',
  'lldt',
  'lmsw',
  'lock',
  'lodsb',
  'lodsw',
  'lodsd',
  'lodsq',
  'loopnz',
  'loope',
  'loop',
  'lsl',
  'ltr',
  'maskmovq',
  'maxpd',
  'maxps',
  'maxsd',
  'maxss',
  'mfence',
  'minpd',
  'minps',
  'minsd',
  'minss',
  'monitor',
  'mov',
  'movapd',
  'movaps',
  'movd',
  'movddup',
  'movdqa',
  'movdqu',
  'movdq2q',
  'movhpd',
  'movhps',
  'movlhps',
  'movlpd',
  'movlps',
  'movhlps',
  'movmskpd',
  'movmskps',
  'movntdq',
  'movnti',
  'movntpd',
  'movntps',
  'movntq',
  'movq',
  'movqa',
  'movq2dq',
  'movsb',
  'movsw',
  'movsd',
  'movsq',
  'movsldup',
  'movshdup',
  'movss',
  'movsx',
  'movupd',
  'movups',
  'movzx',
  'mul',
  'mulpd',
  'mulps',
  'mulsd',
  'mulss',
  'mwait',
  'neg',
  'nop',
  'not',
  'or',
  'orpd',
  'orps',
  'out',
  'outsb',
  'outsw',
  'outsd',
  'outsq',
  'packsswb',
  'packssdw',
  'packuswb',
  'paddb',
  'paddw',
  'paddq',
  'paddsb',
  'paddsw',
  'paddusb',
  'paddusw',
  'pand',
  'pandn',
  'pause',
  'pavgb',
  'pavgw',
  'pcmpeqb',
  'pcmpeqw',
  'pcmpeqd',
  'pcmpgtb',
  'pcmpgtw',
  'pcmpgtd',
  'pextrw',
  'pinsrw',
  'pmaddwd',
  'pmaxsw',
  'pmaxub',
  'pminsw',
  'pminub',
  'pmovmskb',
  'pmulhuw',
  'pmulhw',
  'pmullw',
  'pmuludq',
  'pop',
  'popa',
  'popad',
  'popfw',
  'popfd',
  'popfq',
  'por',
  'prefetch',
  'prefetchnta',
  'prefetcht0',
  'prefetcht1',
  'prefetcht2',
  'psadbw',
  'pshufd',
  'pshufhw',
  'pshuflw',
  'pshufw',
  'pslldq',
  'psllw',
  'pslld',
  'psllq',
  'psraw',
  'psrad',
  'psrlw',
  'psrld',
  'psrlq',
  'psrldq',
  'psubb',
  'psubw',
  'psubd',
  'psubq',
  'psubsb',
  'psubsw',
  'psubusb',
  'psubusw',
  'punpckhbw',
  'punpckhwd',
  'punpckhdq',
  'punpckhqdq',
  'punpcklbw',
  'punpcklwd',
  'punpckldq',
  'punpcklqdq',
  'pi2fw',
  'pi2fd',
  'pf2iw',
  'pf2id',
  'pfnacc',
  'pfpnacc',
  'pfcmpge',
  'pfmin',
  'pfrcp',
  'pfrsqrt',
  'pfsub',
  'pfadd',
  'pfcmpgt',
  'pfmax',
  'pfrcpit1',
  'pfrspit1',
  'pfsubr',
  'pfacc',
  'pfcmpeq',
  'pfmul',
  'pfrcpit2',
  'pmulhrw',
  'pswapd',
  'pavgusb',
  'push',
  'pusha',
  'pushad',
  'pushfw',
  'pushfd',
  'pushfq',
  'pxor',
  'rcl',
  'rcr',
  'rol',
  'ror',
  'rcpps',
  'rcpss',
  'rdmsr',
  'rdpmc',
  'rdtsc',
  'rdtscp',
  'repne',
  'rep',
  'ret',
  'retf',
  'rsm',
  'rsqrtps',
  'rsqrtss',
  'sahf',
  'sal',
  'salc',
  'sar',
  'shl',
  'shr',
  'sbb',
  'scasb',
  'scasw',
  'scasd',
  'scasq',
  'seto',
  'setno',
  'setb',
  'setnb',
  'setz',
  'setnz',
  'setbe',
  'seta',
  'sets',
  'setns',
  'setp',
  'setnp',
  'setl',
  'setge',
  'setle',
  'setg',
  'sfence',
  'sgdt',
  'shld',
  'shrd',
  'shufpd',
  'shufps',
  'sidt',
  'sldt',
  'smsw',
  'sqrtps',
  'sqrtpd',
  'sqrtsd',
  'sqrtss',
  'stc',
  'std',
  'stgi',
  'sti',
  'skinit',
  'stmxcsr',
  'stosb',
  'stosw',
  'stosd',
  'stosq',
  'str',
  'sub',
  'subpd',
  'subps',
  'subsd',
  'subss',
  'swapgs',
  'syscall',
  'sysenter',
  'sysexit',
  'sysret',
  'test',
  'ucomisd',
  'ucomiss',
  'ud2',
  'unpckhpd',
  'unpckhps',
  'unpcklps',
  'unpcklpd',
  'verr',
  'verw',
  'vmcall',
  'vmclear',
  'vmxon',
  'vmptrld',
  'vmptrst',
  'vmresume',
  'vmxoff',
  'vmrun',
  'vmmcall',
  'vmload',
  'vmsave',
  'wait',
  'wbinvd',
  'wrmsr',
  'xadd',
  'xchg',
  'xlatb',
  'xor',
  'xorpd',
  'xorps',
  'db',
  'invalid',
]


operator_spl = [
  'd3vil',
  'na',
  'grp_reg',
  'grp_rm',
  'grp_vendor',
  'grp_x87',
  'grp_mode',
  'grp_osize',
  'grp_asize',
  'grp_mod',
  'none',
]

operators_str = [
  '3dnow',
  'aaa',
  'aad',
  'aam',
  'aas',
  'adc',
  'add',
  'addpd',
  'addps',
  'addsd',
  'addss',
  'addsubpd',
  'addsubps',
  'and',
  'andpd',
  'andps',
  'andnpd',
  'andnps',
  'arpl',
  'movsxd',
  'bound',
  'bsf',
  'bsr',
  'bswap',
  'bt',
  'btc',
  'btr',
  'bts',
  'call',
  'cbw',
  'cwde',
  'cdqe',
  'clc',
  'cld',
  'clflush',
  'clgi',
  'cli',
  'clts',
  'cmc',
  'cmovo',
  'cmovno',
  'cmovb',
  'cmovae',
  'cmovz',
  'cmovnz',
  'cmovbe',
  'cmova',
  'cmovs',
  'cmovns',
  'cmovp',
  'cmovnp',
  'cmovl',
  'cmovge',
  'cmovle',
  'cmovg',
  'cmp',
  'cmppd',
  'cmpps',
  'cmpsb',
  'cmpsw',
  'cmpsd',
  'cmpsq',
  'cmpss',
  'cmpxchg',
  'cmpxchg8b',
  'comisd',
  'comiss',
  'cpuid',
  'cvtdq2pd',
  'cvtdq2ps',
  'cvtpd2dq',
  'cvtpd2pi',
  'cvtpd2ps',
  'cvtpi2ps',
  'cvtpi2pd',
  'cvtps2dq',
  'cvtps2pi',
  'cvtps2pd',
  'cvtsd2si',
  'cvtsd2ss',
  'cvtsi2ss',
  'cvtss2si',
  'cvtss2sd',
  'cvttpd2pi',
  'cvttpd2dq',
  'cvttps2dq',
  'cvttps2pi',
  'cvttsd2si',
  'cvtsi2sd',
  'cvttss2si',
  'cwd',
  'cdq',
  'cqo',
  'daa',
  'das',
  'dec',
  'div',
  'divpd',
  'divps',
  'divsd',
  'divss',
  'emms',
  'enter',
  'f2xm1',
  'fabs',
  'fadd',
  'faddp',
  'fbld',
  'fbstp',
  'fchs',
  'fclex',
  'fcmovb',
  'fcmove',
  'fcmovbe',
  'fcmovu',
  'fcmovnb',
  'fcmovne',
  'fcmovnbe',
  'fcmovnu',
  'fucomi',
  'fcom',
  'fcom2',
  'fcomp3',
  'fcomi',
  'fucomip',
  'fcomip',
  'fcomp',
  'fcomp5',
  'fcompp',
  'fcos',
  'fdecstp',
  'fdiv',
  'fdivp',
  'fdivr',
  'fdivrp',
  'femms',
  'ffree',
  'ffreep',
  'ficom',
  'ficomp',
  'fild',
  'fncstp',
  'fninit',
  'fiadd',
  'fidivr',
  'fidiv',
  'fisub',
  'fisubr',
  'fist',
  'fistp',
  'fisttp',
  'fld',
  'fld1',
  'fldl2t',
  'fldl2e',
  'fldlpi',
  'fldlg2',
  'fldln2',
  'fldz',
  'fldcw',
  'fldenv',
  'fmul',
  'fmulp',
  'fimul',
  'fnop',
  'fpatan',
  'fprem',
  'fprem1',
  'fptan',
  'frndint',
  'frstor',
  'fnsave',
  'fscale',
  'fsin',
  'fsincos',
  'fsqrt',
  'fstp',
  'fstp1',
  'fstp8',
  'fstp9',
  'fst',
  'fnstcw',
  'fnstenv',
  'fnstsw',
  'fsub',
  'fsubp',
  'fsubr',
  'fsubrp',
  'ftst',
  'fucom',
  'fucomp',
  'fucompp',
  'fxam',
  'fxch',
  'fxch4',
  'fxch7',
  'fxrstor',
  'fxsave',
  'fpxtract',
  'fyl2x',
  'fyl2xp1',
  'haddpd',
  'haddps',
  'hlt',
  'hsubpd',
  'hsubps',
  'idiv',
  'in',
  'imul',
  'inc',
  'insb',
  'insw',
  'insd',
  'int1',
  'int3',
  'int',
  'into',
  'invd',
  'invlpg',
  'invlpga',
  'iretw',
  'iretd',
  'iretq',
  'jo',
  'jno',
  'jb',
  'jae',
  'jz',
  'jnz',
  'jbe',
  'ja',
  'js',
  'jns',
  'jp',
  'jnp',
  'jl',
  'jge',
  'jle',
  'jg',
  'jcxz',
  'jecxz',
  'jrcxz',
  'jmp',
  'lahf',
  'lar',
  'lddqu',
  'ldmxcsr',
  'lds',
  'lea',
  'les',
  'lfs',
  'lgs',
  'lidt',
  'lss',
  'leave',
  'lfence',
  'lgdt',
  'lldt',
  'lmsw',
  'lock',
  'lodsb',
  'lodsw',
  'lodsd',
  'lodsq',
  'loopnz',
  'loope',
  'loop',
  'lsl',
  'ltr',
  'maskmovq',
  'maxpd',
  'maxps',
  'maxsd',
  'maxss',
  'mfence',
  'minpd',
  'minps',
  'minsd',
  'minss',
  'monitor',
  'mov',
  'movapd',
  'movaps',
  'movd',
  'movddup',
  'movdqa',
  'movdqu',
  'movdq2q',
  'movhpd',
  'movhps',
  'movlhps',
  'movlpd',
  'movlps',
  'movhlps',
  'movmskpd',
  'movmskps',
  'movntdq',
  'movnti',
  'movntpd',
  'movntps',
  'movntq',
  'movq',
  'movqa',
  'movq2dq',
  'movsb',
  'movsw',
  'movsd',
  'movsq',
  'movsldup',
  'movshdup',
  'movss',
  'movsx',
  'movupd',
  'movups',
  'movzx',
  'mul',
  'mulpd',
  'mulps',
  'mulsd',
  'mulss',
  'mwait',
  'neg',
  'nop',
  'not',
  'or',
  'orpd',
  'orps',
  'out',
  'outsb',
  'outsw',
  'outsd',
  'outsq',
  'packsswb',
  'packssdw',
  'packuswb',
  'paddb',
  'paddw',
  'paddq',
  'paddsb',
  'paddsw',
  'paddusb',
  'paddusw',
  'pand',
  'pandn',
  'pause',
  'pavgb',
  'pavgw',
  'pcmpeqb',
  'pcmpeqw',
  'pcmpeqd',
  'pcmpgtb',
  'pcmpgtw',
  'pcmpgtd',
  'pextrw',
  'pinsrw',
  'pmaddwd',
  'pmaxsw',
  'pmaxub',
  'pminsw',
  'pminub',
  'pmovmskb',
  'pmulhuw',
  'pmulhw',
  'pmullw',
  'pmuludq',
  'pop',
  'popa',
  'popad',
  'popfw',
  'popfd',
  'popfq',
  'por',
  'prefetch',
  'prefetchnta',
  'prefetcht0',
  'prefetcht1',
  'prefetcht2',
  'psadbw',
  'pshufd',
  'pshufhw',
  'pshuflw',
  'pshufw',
  'pslldq',
  'psllw',
  'pslld',
  'psllq',
  'psraw',
  'psrad',
  'psrlw',
  'psrld',
  'psrlq',
  'psrldq',
  'psubb',
  'psubw',
  'psubd',
  'psubq',
  'psubsb',
  'psubsw',
  'psubusb',
  'psubusw',
  'punpckhbw',
  'punpckhwd',
  'punpckhdq',
  'punpckhqdq',
  'punpcklbw',
  'punpcklwd',
  'punpckldq',
  'punpcklqdq',
  'pi2fw',
  'pi2fd',
  'pf2iw',
  'pf2id',
  'pfnacc',
  'pfpnacc',
  'pfcmpge',
  'pfmin',
  'pfrcp',
  'pfrsqrt',
  'pfsub',
  'pfadd',
  'pfcmpgt',
  'pfmax',
  'pfrcpit1',
  'pfrspit1',
  'pfsubr',
  'pfacc',
  'pfcmpeq',
  'pfmul',
  'pfrcpit2',
  'pmulhrw',
  'pswapd',
  'pavgusb',
  'push',
  'pusha',
  'pushad',
  'pushfw',
  'pushfd',
  'pushfq',
  'pxor',
  'rcl',
  'rcr',
  'rol',
  'ror',
  'rcpps',
  'rcpss',
  'rdmsr',
  'rdpmc',
  'rdtsc',
  'rdtscp',
  'repne',
  'rep',
  'ret',
  'retf',
  'rsm',
  'rsqrtps',
  'rsqrtss',
  'sahf',
  'sal',
  'salc',
  'sar',
  'shl',
  'shr',
  'sbb',
  'scasb',
  'scasw',
  'scasd',
  'scasq',
  'seto',
  'setno',
  'setb',
  'setnb',
  'setz',
  'setnz',
  'setbe',
  'seta',
  'sets',
  'setns',
  'setp',
  'setnp',
  'setl',
  'setge',
  'setle',
  'setg',
  'sfence',
  'sgdt',
  'shld',
  'shrd',
  'shufpd',
  'shufps',
  'sidt',
  'sldt',
  'smsw',
  'sqrtps',
  'sqrtpd',
  'sqrtsd',
  'sqrtss',
  'stc',
  'std',
  'stgi',
  'sti',
  'skinit',
  'stmxcsr',
  'stosb',
  'stosw',
  'stosd',
  'stosq',
  'str',
  'sub',
  'subpd',
  'subps',
  'subsd',
  'subss',
  'swapgs',
  'syscall',
  'sysenter',
  'sysexit',
  'sysret',
  'test',
  'ucomisd',
  'ucomiss',
  'ud2',
  'unpckhpd',
  'unpckhps',
  'unpcklps',
  'unpcklpd',
  'verr',
  'verw',
  'vmcall',
  'vmclear',
  'vmxon',
  'vmptrld',
  'vmptrst',
  'vmresume',
  'vmxoff',
  'vmrun',
  'vmmcall',
  'vmload',
  'vmsave',
  'wait',
  'wbinvd',
  'wrmsr',
  'xadd',
  'xchg',
  'xlatb',
  'xor',
  'xorpd',
  'xorps',
  'db',
  'invalid',
]



itab__0f = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_00__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG, ),
  itab_entry ( 'lar',           O_Gv,    O_Ew,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = access_write($op2) & 0xff00'),
  itab_entry ( 'lsl',           O_Gv,    O_Ew,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = segment_limit($op2)'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'syscall',       O_NONE,  O_NONE,  O_NONE,  P_none, 'syscall()'),
  itab_entry ( 'clts',          O_NONE,  O_NONE,  O_NONE,  P_none, 'cr0.ts = 0'),
  itab_entry ( 'sysret',        O_NONE,  O_NONE,  O_NONE,  P_none, 'sysret()'),
  itab_entry ( 'invd',          O_NONE,  O_NONE,  O_NONE,  P_none, 'flush_internal_cache(); init_flush_external_cache()'),
  itab_entry ( 'wbinvd',        O_NONE,  O_NONE,  O_NONE,  P_none, 'write_back();flush_internal_cache();init_external_cache_flush()'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'ud2',           O_NONE,  O_NONE,  O_NONE,  P_none, 'raise invalid opcode exception'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_0D__REG, ),
  itab_entry ( 'femms',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movups',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movups',        O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movlps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movlps',        O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'unpcklps',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'unpckhps',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movhps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movhps',        O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_18__REG, ),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'nop',           O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'mov',           O_R,     O_C,     O_NONE,  P_rexr, '$op1 = $op2'),
  itab_entry ( 'mov',           O_R,     O_D,     O_NONE,  P_rexr, '$op1 = $op2'),
  itab_entry ( 'mov',           O_C,     O_R,     O_NONE,  P_rexr, '$op1 = $op2'),
  itab_entry ( 'mov',           O_D,     O_R,     O_NONE,  P_rexr, '$op1 = $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movaps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movaps',        O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtpi2ps',      O_V,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movntps',       O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvttps2pi',     O_P,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtps2pi',      O_P,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'ucomiss',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'comiss',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'wrmsr',         O_NONE,  O_NONE,  O_NONE,  P_none, 'write_msr(ecx, edx:eax)'),
  itab_entry ( 'rdtsc',         O_NONE,  O_NONE,  O_NONE,  P_none, 'edx:eax = read_tsc()'),
  itab_entry ( 'rdmsr',         O_NONE,  O_NONE,  O_NONE,  P_none, 'edx:eax = read_msr(ecx)'),
  itab_entry ( 'rdpmc',         O_NONE,  O_NONE,  O_NONE,  P_none, 'edx:eax = read_pmc(ecx)'),
  itab_entry ( 'sysenter',      O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, 'sysenter()'),
  itab_entry ( 'sysexit',       O_NONE,  O_NONE,  O_NONE,  P_none, 'sysexit()'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cmovo',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.of) $op1 = $op2'),
  itab_entry ( 'cmovno',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.of) $op1 = $op2'),
  itab_entry ( 'cmovb',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.cf) $op1 = $op2'),
  itab_entry ( 'cmovae',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.cf) $op1 = $op2'),
  itab_entry ( 'cmovz',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.zf) $op1 = $op2'),
  itab_entry ( 'cmovnz',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.zf) $op1 = $op2'),
  itab_entry ( 'cmovbe',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.cf || eflags.zf) $op1 = $op2'),
  itab_entry ( 'cmova',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.cf && !eflags.zf) $op1 = $op2'),
  itab_entry ( 'cmovs',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.sf) $op1 = $op2'),
  itab_entry ( 'cmovns',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.sf) $op1 = $op2'),
  itab_entry ( 'cmovp',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.pf) $op1 = $op2'),
  itab_entry ( 'cmovnp',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.pf) $op1 = $op2'),
  itab_entry ( 'cmovl',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.sf != 0xf) $op1 = $op2'),
  itab_entry ( 'cmovge',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.sf == 0xf) $op1 = $op2'),
  itab_entry ( 'cmovle',        O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (eflags.zf && eflags.sf != 0xf) $op1 = $op2'),
  itab_entry ( 'cmovg',         O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if (!eflags.zf && eflags.sf == 0xf) $op1 = $op2'),
  itab_entry ( 'movmskps',      O_Gd,    O_VR,    O_NONE,  P_oso|P_rexr|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'sqrtps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'rsqrtps',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'rcpps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'andps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'andnps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'orps',          O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'xorps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'addps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'mulps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtps2pd',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtdq2ps',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'subps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'minps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'divps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'maxps',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpcklbw',     O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpcklwd',     O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckldq',     O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'packsswb',      O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpgtb',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpgtw',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpgtd',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'packuswb',      O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhbw',     O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhwd',     O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhdq',     O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'packssdw',      O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movd',          O_P,     O_Ex,    O_NONE,  P_c2|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movq',          O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pshufw',        O_P,     O_Q,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_71__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_72__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_73__REG, ),
  itab_entry ( 'pcmpeqb',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpeqw',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpeqd',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'emms',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movd',          O_Ex,    O_P,     O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movq',          O_Q,     O_P,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'jo',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.of) goto $op1'),
  itab_entry ( 'jno',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.of) goto $op1'),
  itab_entry ( 'jb',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.cf) goto $op1'),
  itab_entry ( 'jae',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.cf) goto $op1'),
  itab_entry ( 'jz',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.zf) goto $op1'),
  itab_entry ( 'jnz',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.zf) goto $op1'),
  itab_entry ( 'jbe',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.cf || eflags.zf) goto $op1'),
  itab_entry ( 'ja',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.cf && !eflags.zf) goto $op1'),
  itab_entry ( 'js',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.sf) goto $op1'),
  itab_entry ( 'jns',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.sf) goto $op1'),
  itab_entry ( 'jp',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.pf) goto $op1'),
  itab_entry ( 'jnp',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.pf) goto $op1'),
  itab_entry ( 'jl',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.sf != 0xf) goto $op1'),
  itab_entry ( 'jge',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.sf == 0xf) goto $op1'),
  itab_entry ( 'jle',           O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (eflags.zf || eflags.sf != 0xf) goto $op1'),
  itab_entry ( 'jg',            O_Jz,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_oso, 'if (!eflags.zf && eflags.sf == 0xf) goto $op1'),
  itab_entry ( 'seto',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (eflags.of ? 1 : 0)'),
  itab_entry ( 'setno',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (!eflags.of ? 1 : 0)'),
  itab_entry ( 'setb',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (eflags.cf ? 1 : 0)'),
  itab_entry ( 'setnb',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (!eflags.cf ? 1 : 0)'),
  itab_entry ( 'setz',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (eflags.zf ? 1 : 0)'),
  itab_entry ( 'setnz',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (!eflags.zf ? 1 : 0)'),
  itab_entry ( 'setbe',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = ((eflags.cf || eflags.zf) ? 1 : 0)'),
  itab_entry ( 'seta',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = ((!eflags.cf && !eflags.zf) ? 1 : 0)'),
  itab_entry ( 'sets',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (eflags.sf ? 1 : 0)'),
  itab_entry ( 'setns',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (!eflags.sf ? 1 : 0)'),
  itab_entry ( 'setp',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (eflags.pf ? 1 : 0)'),
  itab_entry ( 'setnp',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (!eflags.pf ? 1 : 0)'),
  itab_entry ( 'setl',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = ((eflags.sf != 0xf) ? 1 : 0)'),
  itab_entry ( 'setge',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = ((eflags.sf == 0xf) ? 1 : 0)'),
  itab_entry ( 'setle',         O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (((eflag.zf) || (eflags.sf != 0xf)) ? 1 : 0)'),
  itab_entry ( 'setg',          O_Eb,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = (((!eflag.zf) && (eflags.sf == 0xf)) ? 1 : 0)'),
  itab_entry ( 'push',          O_FS,    O_NONE,  O_NONE,  P_none, '${op1} => stack'),
  itab_entry ( 'pop',           O_FS,    O_NONE,  O_NONE,  P_none, '$op1 <= stack'),
  itab_entry ( 'cpuid',         O_NONE,  O_NONE,  O_NONE,  P_none, 'cpuid()'),
  itab_entry ( 'bt',            O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit($op1, $op2)'),
  itab_entry ( 'shld',          O_Ev,    O_Gv,    O_Ib,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = left_shift($op1, $op3, $op2)'),
  itab_entry ( 'shld',          O_Ev,    O_Gv,    O_CL,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = left_shift($op1, $op3, $op2)'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'push',          O_GS,    O_NONE,  O_NONE,  P_none, '${op1} => stack'),
  itab_entry ( 'pop',           O_GS,    O_NONE,  O_NONE,  P_none, '$op1 <= stack'),
  itab_entry ( 'rsm',           O_NONE,  O_NONE,  O_NONE,  P_none, 'smm_return'),
  itab_entry ( 'bts',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit_and_set($op1, $op2)'),
  itab_entry ( 'shrd',          O_Ev,    O_Gv,    O_Ib,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = right_shift($op1, $op3, $op2)'),
  itab_entry ( 'shrd',          O_Ev,    O_Gv,    O_CL,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = right_shift($op1, $op3, $op2)'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG, ),
  itab_entry ( 'imul',          O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 *= $op2 * $op3'),
  itab_entry ( 'cmpxchg',       O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'if(rdx:rax == $op1) {eflags.zf = 1; $op1 = rcx:rbx;} else {eflags.zf = 0; rdx:rax = $op1}'),
  itab_entry ( 'cmpxchg',       O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'if(rdx:rax == $op1) {eflags.zf = 1; $op1 = rcx:rbx;} else {eflags.zf = 0; rdx:rax = $op1}'),
  itab_entry ( 'lss',           O_Gz,    O_M,     O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'btr',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit_and_reset($op1, $op2)'),
  itab_entry ( 'lfs',           O_Gz,    O_M,     O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'lgs',           O_Gz,    O_M,     O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movzx',         O_Gv,    O_Eb,    O_NONE,  P_c2|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'movzx',         O_Gv,    O_Ew,    O_NONE,  P_c2|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_BA__REG, ),
  itab_entry ( 'btc',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit_and_complement($op1, $op2)'),
  itab_entry ( 'bsf',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = first_set_bit($op2)'),
  itab_entry ( 'bsr',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = first_set_bit_reverse($op2)'),
  itab_entry ( 'movsx',         O_Gv,    O_Eb,    O_NONE,  P_c2|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = sign_extend($op2)'),
  itab_entry ( 'movsx',         O_Gv,    O_Ew,    O_NONE,  P_c2|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = sign_extend($op2)'),
  itab_entry ( 'xadd',          O_Eb,    O_Gb,    O_NONE,  P_aso|P_oso|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xadd',          O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'cmpps',         O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movnti',        O_M,     O_Gvw,   O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pinsrw',        O_P,     O_Ew,    O_Ib,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pextrw',        O_Gd,    O_PR,    O_Ib,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'shufps',        O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_C7__REG, ),
  itab_entry ( 'bswap',         O_rAXr8, O_NONE,  O_NONE,  P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rCXr9, O_NONE,  O_NONE,  P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rDXr10, O_NONE,  O_NONE, P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rBXr11, O_NONE,  O_NONE, P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rSPr12, O_NONE,  O_NONE, P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rBPr13, O_NONE,  O_NONE, P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rSIr14, O_NONE,  O_NONE, P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'bswap',         O_rDIr15, O_NONE,  O_NONE, P_oso|P_rexw|P_rexb, '$op1 = byte_swap($op1)'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrlw',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrld',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrlq',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddq',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmullw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'pmovmskb',      O_Gd,    O_PR,    O_NONE,  P_oso|P_rexr|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubusb',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubusw',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pminub',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pand',          O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddusb',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddusw',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmaxub',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pandn',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pavgb',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psraw',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrad',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pavgw',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmulhuw',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmulhw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movntq',        O_M,     O_P,     O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'psubsb',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubsw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pminsw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'por',           O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddsb',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddsw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmaxsw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pxor',          O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psllw',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pslld',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psllq',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmuludq',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmaddwd',       O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psadbw',        O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'maskmovq',      O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubb',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubw',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubd',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubq',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddb',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddw',         O_P,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_00__reg = [
  itab_entry ( 'sldt',          O_Ev,    O_NONE,  O_NONE,  P_aso|P_oso|P_rexr|P_rexx|P_rexb, '$op1 = ldtr'),
  itab_entry ( 'str',           O_Ev,    O_NONE,  O_NONE,  P_aso|P_oso|P_rexr|P_rexx|P_rexb, '$op1 = task_register'),
  itab_entry ( 'lldt',          O_Ew,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'idtr = $op1'),
  itab_entry ( 'ltr',           O_Ew,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'task_register = $op1'),
  itab_entry ( 'verr',          O_Ew,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'verw',          O_Ew,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg = [
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_00__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_01__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_02__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_04__MOD, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_06__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_07__MOD, ),
]

itab__0f__op_01__reg__op_00__mod = [
  itab_entry ( 'sgdt',          O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = gdtr'),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM, ),
]

itab__0f__op_01__reg__op_00__mod__op_01__rm = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM__OP_01__VENDOR, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM__OP_03__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_00__MOD__OP_01__RM__OP_04__VENDOR, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_00__mod__op_01__rm__op_01__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmcall',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__0f__op_01__reg__op_00__mod__op_01__rm__op_03__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmresume',      O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__0f__op_01__reg__op_00__mod__op_01__rm__op_04__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmxoff',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__0f__op_01__reg__op_01__mod = [
  itab_entry ( 'sidt',          O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_01__MOD__OP_01__RM, ),
]

itab__0f__op_01__reg__op_01__mod__op_01__rm = [
  itab_entry ( 'monitor',       O_NONE,  O_NONE,  O_NONE,  P_none, 'monitor(eax, ecx, edx)'),
  itab_entry ( 'mwait',         O_NONE,  O_NONE,  O_NONE,  P_none, 'mwait()'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_02__mod = [
  itab_entry ( 'lgdt',          O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'gdtr = $op1'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod = [
  itab_entry ( 'lidt',          O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm = [
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_00__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_01__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_02__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_03__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_04__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_05__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_06__VENDOR, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_03__MOD__OP_01__RM__OP_07__VENDOR, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_00__vendor = [
  itab_entry ( 'vmrun',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_01__vendor = [
  itab_entry ( 'vmmcall',       O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_02__vendor = [
  itab_entry ( 'vmload',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_03__vendor = [
  itab_entry ( 'vmsave',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_04__vendor = [
  itab_entry ( 'stgi',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_05__vendor = [
  itab_entry ( 'clgi',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_06__vendor = [
  itab_entry ( 'skinit',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_03__mod__op_01__rm__op_07__vendor = [
  itab_entry ( 'invlpga',       O_NONE,  O_NONE,  O_NONE,  P_none, 'invalidate_tlb_all()'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_04__mod = [
  itab_entry ( 'smsw',          O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = cr0[0-15]'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_06__mod = [
  itab_entry ( 'lmsw',          O_Ew,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'cr0[0-15] = $op1'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_07__mod = [
  itab_entry ( 'invlpg',        O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'invalidate_tlb($op1)'),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_07__MOD__OP_01__RM, ),
]

itab__0f__op_01__reg__op_07__mod__op_01__rm = [
  itab_entry ( 'swapgs',        O_NONE,  O_NONE,  O_NONE,  P_none, 'swap(gs, msr_kernel_gs_base)'),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_01__REG__OP_07__MOD__OP_01__RM__OP_01__VENDOR, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_01__reg__op_07__mod__op_01__rm__op_01__vendor = [
  itab_entry ( 'rdtscp',        O_NONE,  O_NONE,  O_NONE,  P_none, 'edx:eax = read_tsc(); ecx = processor_id'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_0d__reg = [
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
  itab_entry ( 'prefetch',      O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1)'),
]

itab__0f__op_18__reg = [
  itab_entry ( 'prefetchnta',   O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1, HINT_NON_TEMPORAL)'),
  itab_entry ( 'prefetcht0',    O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1, HINT_TEMPORAL0)'),
  itab_entry ( 'prefetcht1',    O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1, HINT_TEMPORAL1)'),
  itab_entry ( 'prefetcht2',    O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'prefetch($op1, HINT_TEMPORAL2)'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_71__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrlw',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psraw',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psllw',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_72__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrld',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrad',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'pslld',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_73__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrlq',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psllq',         O_PR,    O_Ib,    O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__0f__op_ae__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'ldmxcsr',       O_Md,    O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'stmxcsr',       O_Md,    O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG__OP_05__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG__OP_06__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG__OP_07__MOD, ),
]

itab__0f__op_ae__reg__op_05__mod = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG__OP_05__MOD__OP_01__RM, ),
]

itab__0f__op_ae__reg__op_05__mod__op_01__rm = [
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
  itab_entry ( 'lfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_operations()'),
]

itab__0f__op_ae__reg__op_06__mod = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG__OP_06__MOD__OP_01__RM, ),
]

itab__0f__op_ae__reg__op_06__mod__op_01__rm = [
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
  itab_entry ( 'mfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_load_and_store_operations()'),
]

itab__0f__op_ae__reg__op_07__mod = [
  itab_entry ( 'clflush',       O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'flush_cache_line($op1)'),
  itab_entry ( 'grp_rm',        O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_AE__REG__OP_07__MOD__OP_01__RM, ),
]

itab__0f__op_ae__reg__op_07__mod__op_01__rm = [
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
  itab_entry ( 'sfence',        O_NONE,  O_NONE,  O_NONE,  P_none, 'serialize_store_operations()'),
]

itab__0f__op_ba__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'bt',            O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit($op1, $op2)'),
  itab_entry ( 'bts',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit_and_set($op1, $op2)'),
  itab_entry ( 'btr',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit_and_reset($op1, $op2)'),
  itab_entry ( 'btc',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags.cf = get_bit_and_complement($op1, $op2)'),
]

itab__0f__op_c7__reg = [
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_C7__REG__OP_00__VENDOR, ),
  itab_entry ( 'cmpxchg8b',     O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'if(edx:eax == $op1) {eflags.zf = 1; $op1 = ecx:ebx;} else {eflags.zf = 0; edx:eax = $op1}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_C7__REG__OP_07__VENDOR, ),
]

itab__0f__op_c7__reg__op_00__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmptrld',       O_Mq,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__0f__op_c7__reg__op_07__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmptrst',       O_Mq,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__0f__op_d9__mod = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__0F__OP_D9__MOD__OP_01__X87, ),
]

itab__0f__op_d9__mod__op_01__x87 = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fabs',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'f2xm1',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte = [
  itab_entry ( 'add',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'add',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'add',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'add',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'add',           O_AL,    O_Ib,    O_NONE,  P_none, '$op1 += $op2'),
  itab_entry ( 'add',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 += $op2'),
  itab_entry ( 'push',          O_ES,    O_NONE,  O_NONE,  P_inv64|P_none, '${op1} => stack'),
  itab_entry ( 'pop',           O_ES,    O_NONE,  O_NONE,  P_inv64|P_none, '$op1 <= stack'),
  itab_entry ( 'or',            O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'or',            O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'or',            O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'or',            O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'or',            O_AL,    O_Ib,    O_NONE,  P_none, '$op1 |= $op2'),
  itab_entry ( 'or',            O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 |= $op2'),
  itab_entry ( 'push',          O_CS,    O_NONE,  O_NONE,  P_inv64|P_none, '${op1} => stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'adc',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'adc',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'adc',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'adc',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'adc',           O_AL,    O_Ib,    O_NONE,  P_none, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'adc',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'push',          O_SS,    O_NONE,  O_NONE,  P_inv64|P_none, '${op1} => stack'),
  itab_entry ( 'pop',           O_SS,    O_NONE,  O_NONE,  P_inv64|P_none, '$op1 <= stack'),
  itab_entry ( 'sbb',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_AL,    O_Ib,    O_NONE,  P_none, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'push',          O_DS,    O_NONE,  O_NONE,  P_inv64|P_none, '${op1} => stack'),
  itab_entry ( 'pop',           O_DS,    O_NONE,  O_NONE,  P_inv64|P_none, '$op1 <= stack'),
  itab_entry ( 'and',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'and',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'and',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'and',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'and',           O_AL,    O_Ib,    O_NONE,  P_none, '$op1 &= $op2'),
  itab_entry ( 'and',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 &= $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'daa',           O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'sub',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'sub',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'sub',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'sub',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'sub',           O_AL,    O_Ib,    O_NONE,  P_none, '$op1 -= $op2'),
  itab_entry ( 'sub',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 -= $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'das',           O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'xor',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'xor',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'xor',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'xor',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'xor',           O_AL,    O_Ib,    O_NONE,  P_none, '$op1 ^= $op2'),
  itab_entry ( 'xor',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, '$op1 ^= $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'aaa',           O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'cmp',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
  itab_entry ( 'cmp',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
  itab_entry ( 'cmp',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
  itab_entry ( 'cmp',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
  itab_entry ( 'cmp',           O_AL,    O_Ib,    O_NONE,  P_none, 'eflags._f = $op2 - $op1'),
  itab_entry ( 'cmp',           O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, 'eflags._f = $op2 - $op1'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'aas',           O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'inc',           O_eAX,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eCX,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eDX,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eBX,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eSP,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eBP,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eSI,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'inc',           O_eDI,   O_NONE,  O_NONE,  P_oso, '$op1++'),
  itab_entry ( 'dec',           O_eAX,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eCX,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eDX,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eBX,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eSP,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eBP,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eSI,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'dec',           O_eDI,   O_NONE,  O_NONE,  P_oso, '${op1}--'),
  itab_entry ( 'push',          O_rAXr8, O_NONE,  O_NONE,  P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rCXr9, O_NONE,  O_NONE,  P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rDXr10, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rBXr11, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rSPr12, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rBPr13, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rSIr14, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'push',          O_rDIr15, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '${op1} => stack'),
  itab_entry ( 'pop',           O_rAXr8, O_NONE,  O_NONE,  P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rCXr9, O_NONE,  O_NONE,  P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rDXr10, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rBXr11, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rSPr12, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rBPr13, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rSIr14, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'pop',           O_rDIr15, O_NONE,  O_NONE, P_def64|P_depM|P_oso|P_rexb, '$op1 <= stack'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_60__OSIZE, ),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_61__OSIZE, ),
  itab_entry ( 'bound',         O_Gv,    O_M,     O_NONE,  P_inv64|P_aso|P_oso, '${op1} = ${op2}'),
  itab_entry ( 'grp_mode',      O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_63__MODE, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'push',          O_Iz,    O_NONE,  O_NONE,  P_c1|P_oso, '${op1} => stack'),
  itab_entry ( 'imul',          O_Gv,    O_Ev,    O_Iz,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 *= $op2 * $op3'),
  itab_entry ( 'push',          O_Ib,    O_NONE,  O_NONE,  P_none, '${op1} => stack'),
  itab_entry ( 'imul',          O_Gv,    O_Ev,    O_Ib,    P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 *= $op2 * $op3'),
  itab_entry ( 'insb',          O_NONE,  O_NONE,  O_NONE,  P_none, '*((uint8_t *)(es:rdi)) = (uint8_t)$op1'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_6D__OSIZE, ),
  itab_entry ( 'outsb',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_6F__OSIZE, ),
  itab_entry ( 'jo',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.of) goto $op1'),
  itab_entry ( 'jno',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.of) goto $op1'),
  itab_entry ( 'jb',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.cf) goto $op1'),
  itab_entry ( 'jae',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.cf) goto $op1'),
  itab_entry ( 'jz',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.zf) goto $op1'),
  itab_entry ( 'jnz',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.zf) goto $op1'),
  itab_entry ( 'jbe',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.cf || eflags.zf) goto $op1'),
  itab_entry ( 'ja',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.cf && !eflags.zf) goto $op1'),
  itab_entry ( 'js',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.sf) goto $op1'),
  itab_entry ( 'jns',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.sf) goto $op1'),
  itab_entry ( 'jp',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.pf) goto $op1'),
  itab_entry ( 'jnp',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.pf) goto $op1'),
  itab_entry ( 'jl',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.sf != 0xf) goto $op1'),
  itab_entry ( 'jge',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.sf == 0xf) goto $op1'),
  itab_entry ( 'jle',           O_Jb,    O_NONE,  O_NONE,  P_none, 'if (eflags.zf || eflags.sf != 0xf) goto $op1'),
  itab_entry ( 'jg',            O_Jb,    O_NONE,  O_NONE,  P_none, 'if (!eflags.zf && eflags.sf == 0xf) goto $op1'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_80__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_81__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_82__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_83__REG, ),
  itab_entry ( 'test',          O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'test',          O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'xchg',          O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'mov',           O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_Gb,    O_Eb,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_Gv,    O_Ev,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_Ev,    O_S,     O_NONE,  P_aso|P_oso|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'lea',           O_Gv,    O_M,     O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = &$op2'),
  itab_entry ( 'mov',           O_S,     O_Ev,    O_NONE,  P_aso|P_oso|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_8F__REG, ),
  itab_entry ( 'xchg',          O_rAXr8, O_rAX,   O_NONE,  P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rCXr9, O_rAX,   O_NONE,  P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rDXr10, O_rAX,   O_NONE, P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rBXr11, O_rAX,   O_NONE, P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rSPr12, O_rAX,   O_NONE, P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rBPr13, O_rAX,   O_NONE, P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rSIr14, O_rAX,   O_NONE, P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xchg',          O_rDIr15, O_rAX,   O_NONE, P_oso|P_rexw|P_rexb, '_temp = $op1; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_98__OSIZE, ),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_99__OSIZE, ),
  itab_entry ( 'call',          O_Ap,    O_NONE,  O_NONE,  P_inv64|P_oso, 'call $op1'),
  itab_entry ( 'wait',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'grp_mode',      O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_9C__MODE, ),
  itab_entry ( 'grp_mode',      O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_9D__MODE, ),
  itab_entry ( 'sahf',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'lahf',          O_NONE,  O_NONE,  O_NONE,  P_none, 'ah = eflags(sf | zf | 0 | af | 0 | pf | cf)'),
  itab_entry ( 'mov',           O_AL,    O_Ob,    O_NONE,  P_none, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rAX,   O_Ov,    O_NONE,  P_aso|P_oso|P_rexw, '$op1 = $op2'),
  itab_entry ( 'mov',           O_Ob,    O_AL,    O_NONE,  P_none, '$op1 = $op2'),
  itab_entry ( 'mov',           O_Ov,    O_rAX,   O_NONE,  P_aso|P_oso|P_rexw, '$op1 = $op2'),
  itab_entry ( 'movsb',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_none, '*((uint8_t *)(ds:esi)) = *((uint8_t *)(es:edi))'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_A5__OSIZE, ),
  itab_entry ( 'cmpsb',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_A7__OSIZE, ),
  itab_entry ( 'test',          O_AL,    O_Ib,    O_NONE,  P_none, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'test',          O_rAX,   O_Iz,    O_NONE,  P_oso|P_rexw, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'stosb',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_none, '*((uint8_t *)(es:edi)) = al'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_AB__OSIZE, ),
  itab_entry ( 'lodsb',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_none, '$op1 = es:esi'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_AD__OSIZE, ),
  itab_entry ( 'scasb',         O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags._f = al - es:edi'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_AF__OSIZE, ),
  itab_entry ( 'mov',           O_ALr8b, O_Ib,    O_NONE,  P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_CLr9b, O_Ib,    O_NONE,  P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_DLr10b, O_Ib,    O_NONE, P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_BLr11b, O_Ib,    O_NONE, P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_AHr12b, O_Ib,    O_NONE, P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_CHr13b, O_Ib,    O_NONE, P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_DHr14b, O_Ib,    O_NONE, P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_BHr15b, O_Ib,    O_NONE, P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rAXr8, O_Iv,    O_NONE,  P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rCXr9, O_Iv,    O_NONE,  P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rDXr10, O_Iv,    O_NONE, P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rBXr11, O_Iv,    O_NONE, P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rSPr12, O_Iv,    O_NONE, P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rBPr13, O_Iv,    O_NONE, P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rSIr14, O_Iv,    O_NONE, P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'mov',           O_rDIr15, O_Iv,    O_NONE, P_oso|P_rexw|P_rexb, '$op1 = $op2'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_C0__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_C1__REG, ),
  itab_entry ( 'ret',           O_Iw,    O_NONE,  O_NONE,  P_none, 'return'),
  itab_entry ( 'ret',           O_NONE,  O_NONE,  O_NONE,  P_none, 'return'),
  itab_entry ( 'les',           O_Gv,    O_M,     O_NONE,  P_inv64|P_aso|P_oso, '${op1} = ${op2}'),
  itab_entry ( 'lds',           O_Gv,    O_M,     O_NONE,  P_inv64|P_aso|P_oso, 'ds:$op1 = $op2'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_C6__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_C7__REG, ),
  itab_entry ( 'enter',         O_Iw,    O_Ib,    O_NONE,  P_def64|P_depM|P_none, 'ebp => stack; ebp = esp; esp += $op1; nesting($op2)'),
  itab_entry ( 'leave',         O_NONE,  O_NONE,  O_NONE,  P_none, 'esp = ebp; ebp <= stack'),
  itab_entry ( 'retf',          O_Iw,    O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'retf',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'int3',          O_NONE,  O_NONE,  O_NONE,  P_none, 'trap_to_debugger()'),
  itab_entry ( 'int',           O_Ib,    O_NONE,  O_NONE,  P_none, 'interrupt($op1)'),
  itab_entry ( 'into',          O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, 'if (eflags.of) interrupt(4)'),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_CF__OSIZE, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D0__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D1__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D2__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D3__REG, ),
  itab_entry ( 'aam',           O_Ib,    O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'aad',           O_Ib,    O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'salc',          O_NONE,  O_NONE,  O_NONE,  P_inv64|P_none, '${op1} = ${op2}'),
  itab_entry ( 'xlatb',         O_NONE,  O_NONE,  O_NONE,  P_rexw, '${op1} = ${op2}'),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D8__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D9__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DA__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DB__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DC__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DD__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DE__MOD, ),
  itab_entry ( 'grp_mod',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DF__MOD, ),
  itab_entry ( 'loopnz',        O_Jb,    O_NONE,  O_NONE,  P_none, 'ecx--; if(ecx && !eflags.zf) goto $op1'),
  itab_entry ( 'loope',         O_Jb,    O_NONE,  O_NONE,  P_none, 'ecx--; if(ecx && eflags.zf) goto $op1'),
  itab_entry ( 'loop',          O_Jb,    O_NONE,  O_NONE,  P_none, 'ecx--; if(ecx) goto $op1'),
  itab_entry ( 'grp_asize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_E3__ASIZE, ),
  itab_entry ( 'in',            O_AL,    O_Ib,    O_NONE,  P_none, '$op1 = in($op2)'),
  itab_entry ( 'in',            O_eAX,   O_Ib,    O_NONE,  P_oso, '$op1 = in($op2)'),
  itab_entry ( 'out',           O_Ib,    O_AL,    O_NONE,  P_none, 'out(eax, $op1)'),
  itab_entry ( 'out',           O_Ib,    O_eAX,   O_NONE,  P_oso, 'out(eax, $op1)'),
  itab_entry ( 'call',          O_Jz,    O_NONE,  O_NONE,  P_def64|P_oso, 'call $op1'),
  itab_entry ( 'jmp',           O_Jz,    O_NONE,  O_NONE,  P_def64|P_depM|P_oso, 'goto $op1'),
  itab_entry ( 'jmp',           O_Ap,    O_NONE,  O_NONE,  P_inv64|P_none, 'goto $op1'),
  itab_entry ( 'jmp',           O_Jb,    O_NONE,  O_NONE,  P_none, 'goto $op1'),
  itab_entry ( 'in',            O_AL,    O_DX,    O_NONE,  P_none, '$op1 = in($op2)'),
  itab_entry ( 'in',            O_eAX,   O_DX,    O_NONE,  P_oso, '$op1 = in($op2)'),
  itab_entry ( 'out',           O_DX,    O_AL,    O_NONE,  P_none, 'out(eax, $op1)'),
  itab_entry ( 'out',           O_DX,    O_eAX,   O_NONE,  P_oso, 'out(eax, $op1)'),
  itab_entry ( 'lock',          O_NONE,  O_NONE,  O_NONE,  P_none, 'lock()'),
  itab_entry ( 'int1',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'repne',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'rep',           O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'hlt',           O_NONE,  O_NONE,  O_NONE,  P_none, 'hlt()'),
  itab_entry ( 'cmc',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.cf = !eflags.cf'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_F6__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_F7__REG, ),
  itab_entry ( 'clc',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.cf = 0'),
  itab_entry ( 'stc',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.cf = 1'),
  itab_entry ( 'cli',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.if = 0'),
  itab_entry ( 'sti',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.if = 1'),
  itab_entry ( 'cld',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.df = 0'),
  itab_entry ( 'std',           O_NONE,  O_NONE,  O_NONE,  P_none, 'eflags.df = 1'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_FE__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_FF__REG, ),
]

itab__1byte__op_60__osize = [
  itab_entry ( 'pusha',         O_NONE,  O_NONE,  O_NONE,  P_inv64|P_oso, '${op1} = ${op2}'),
  itab_entry ( 'pushad',        O_NONE,  O_NONE,  O_NONE,  P_inv64|P_oso, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_61__osize = [
  itab_entry ( 'popa',          O_NONE,  O_NONE,  O_NONE,  P_inv64|P_oso, '${op1} = ${op2}'),
  itab_entry ( 'popad',         O_NONE,  O_NONE,  O_NONE,  P_inv64|P_oso, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_63__mode = [
  itab_entry ( 'arpl',          O_Ew,    O_Gw,    O_NONE,  P_inv64|P_aso, '${op1} = ${op2}'),
  itab_entry ( 'arpl',          O_Ew,    O_Gw,    O_NONE,  P_inv64|P_aso, '${op1} = ${op2}'),
  itab_entry ( 'movsxd',        O_Gv,    O_Ed,    O_NONE,  P_c2|P_aso|P_oso|P_rexw|P_rexx|P_rexr|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_6d__osize = [
  itab_entry ( 'insw',          O_NONE,  O_NONE,  O_NONE,  P_oso, '*((uint16_t *)(es:rdi)) = (uint16_t)$op1'),
  itab_entry ( 'insd',          O_NONE,  O_NONE,  O_NONE,  P_oso, '*((uint32_t *)(es:rdi)) = (uint32_t)$op1'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_6f__osize = [
  itab_entry ( 'outsw',         O_NONE,  O_NONE,  O_NONE,  P_oso, '${op1} = ${op2}'),
  itab_entry ( 'outsd',         O_NONE,  O_NONE,  O_NONE,  P_oso, '${op1} = ${op2}'),
  itab_entry ( 'outsq',         O_NONE,  O_NONE,  O_NONE,  P_oso, '${op1} = ${op2}'),
]

itab__1byte__op_80__reg = [
  itab_entry ( 'add',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'or',            O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'adc',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'and',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'sub',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'xor',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'cmp',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
]

itab__1byte__op_81__reg = [
  itab_entry ( 'add',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'or',            O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'adc',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'and',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'sub',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'xor',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'cmp',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
]

itab__1byte__op_82__reg = [
  itab_entry ( 'add',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'or',            O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'adc',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'and',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'sub',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'xor',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'cmp',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_inv64|P_aso|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
]

itab__1byte__op_83__reg = [
  itab_entry ( 'add',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2'),
  itab_entry ( 'or',            O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 |= $op2'),
  itab_entry ( 'adc',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 += $op2 + eflags.cf'),
  itab_entry ( 'sbb',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2 + eflags.cf'),
  itab_entry ( 'and',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 &= $op2'),
  itab_entry ( 'sub',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 -= $op2'),
  itab_entry ( 'xor',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ^= $op2'),
  itab_entry ( 'cmp',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op2 - $op1'),
]

itab__1byte__op_8f__reg = [
  itab_entry ( 'pop',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <= stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_98__osize = [
  itab_entry ( 'cbw',           O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'ax = sign_extend(al)'),
  itab_entry ( 'cwde',          O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'eax = sign_extend(ax)'),
  itab_entry ( 'cdqe',          O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'rax = sign_extend(eax)'),
]

itab__1byte__op_99__osize = [
  itab_entry ( 'cwd',           O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'if (ax & (1 << 15)) {dx = -1;} else {dx = 0;}'),
  itab_entry ( 'cdq',           O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'if (eax & (1 << 15)) {edx = -1;} else {edx = 0;}'),
  itab_entry ( 'cqo',           O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'if (rax & (1 << 15)) {rdx = -1;} else {rdx = 0;}'),
]

itab__1byte__op_9c__mode = [
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_9C__MODE__OP_00__OSIZE, ),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_9C__MODE__OP_01__OSIZE, ),
  itab_entry ( 'pushfq',        O_NONE,  O_NONE,  O_NONE,  P_def64|P_oso|P_rexw, 'rflags => stack'),
]

itab__1byte__op_9c__mode__op_00__osize = [
  itab_entry ( 'pushfw',        O_NONE,  O_NONE,  O_NONE,  P_def64|P_oso, 'flags => stack'),
  itab_entry ( 'pushfd',        O_NONE,  O_NONE,  O_NONE,  P_def64|P_oso, 'eflags => stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_9c__mode__op_01__osize = [
  itab_entry ( 'pushfw',        O_NONE,  O_NONE,  O_NONE,  P_def64|P_oso, 'flags => stack'),
  itab_entry ( 'pushfd',        O_NONE,  O_NONE,  O_NONE,  P_def64|P_oso, 'eflags => stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_9d__mode = [
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_9D__MODE__OP_00__OSIZE, ),
  itab_entry ( 'grp_osize',     O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_9D__MODE__OP_01__OSIZE, ),
  itab_entry ( 'popfq',         O_NONE,  O_NONE,  O_NONE,  P_def64|P_depM|P_oso, 'rflags <= stack'),
]

itab__1byte__op_9d__mode__op_00__osize = [
  itab_entry ( 'popfw',         O_NONE,  O_NONE,  O_NONE,  P_def64|P_depM|P_oso, 'flags <= stack'),
  itab_entry ( 'popfd',         O_NONE,  O_NONE,  O_NONE,  P_def64|P_depM|P_oso, 'eflags <= stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_9d__mode__op_01__osize = [
  itab_entry ( 'popfw',         O_NONE,  O_NONE,  O_NONE,  P_def64|P_depM|P_oso, 'flags <= stack'),
  itab_entry ( 'popfd',         O_NONE,  O_NONE,  O_NONE,  P_def64|P_depM|P_oso, 'eflags <= stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_a5__osize = [
  itab_entry ( 'movsw',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '*((uint16_t *)(ds:esi)) = *((uint16_t *)(es:edi))'),
  itab_entry ( 'movsd',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '*((uint32_t *)(ds:esi)) = *((uint32_t *)(es:edi))'),
  itab_entry ( 'movsq',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '*((uint64_t *)(ds:esi)) = *((uint64_t *)(es:edi))'),
]

itab__1byte__op_a7__osize = [
  itab_entry ( 'cmpsw',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, '${op1} = ${op2}'),
  itab_entry ( 'cmpsd',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, '${op1} = ${op2}'),
  itab_entry ( 'cmpsq',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, '${op1} = ${op2}'),
]

itab__1byte__op_ab__osize = [
  itab_entry ( 'stosw',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '*((uint16_t *)(es:edi)) = ax'),
  itab_entry ( 'stosd',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '*((uint32_t *)(es:edi)) = eax'),
  itab_entry ( 'stosq',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '*((uint8_t *)(edi)) = rax'),
]

itab__1byte__op_ad__osize = [
  itab_entry ( 'lodsw',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '$op1 = es:esi'),
  itab_entry ( 'lodsd',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '$op1 = es:esi'),
  itab_entry ( 'lodsq',         O_NONE,  O_NONE,  O_NONE,  P_ImpAddr|P_oso|P_rexw, '$op1 = es:esi'),
]

itab__1byte__op_ae__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_AE__MOD__OP_00__REG, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_ae__mod__op_00__reg = [
  itab_entry ( 'fxsave',        O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fxrstor',       O_M,     O_NONE,  O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_af__osize = [
  itab_entry ( 'scasw',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'eflags._f = ax - es:edi'),
  itab_entry ( 'scasd',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'eflags._f = eax - es:edi'),
  itab_entry ( 'scasq',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'eflags._f = rax - rdi'),
]

itab__1byte__op_c0__reg = [
  itab_entry ( 'rol',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate($op1, $op2)'),
  itab_entry ( 'ror',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate($op1, $op2)'),
  itab_entry ( 'rcl',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'rcr',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'shl',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'shr',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 >>= $op2'),
  itab_entry ( 'shl',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'sar',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ->>= $op2;'),
]

itab__1byte__op_c1__reg = [
  itab_entry ( 'rol',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate($op1, $op2)'),
  itab_entry ( 'ror',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate($op1, $op2)'),
  itab_entry ( 'rcl',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'rcr',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'shl',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'shr',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 >>= $op2'),
  itab_entry ( 'shl',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'sar',           O_Ev,    O_Ib,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ->>= $op2;'),
]

itab__1byte__op_c6__reg = [
  itab_entry ( 'mov',           O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_c7__reg = [
  itab_entry ( 'mov',           O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = $op2'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_cf__osize = [
  itab_entry ( 'iretw',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'interrupt_return'),
  itab_entry ( 'iretd',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'interrupt_return'),
  itab_entry ( 'iretq',         O_NONE,  O_NONE,  O_NONE,  P_oso|P_rexw, 'interrupt_return'),
]

itab__1byte__op_d0__reg = [
  itab_entry ( 'rol',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate($op1, $op2)'),
  itab_entry ( 'ror',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate($op1, $op2)'),
  itab_entry ( 'rcl',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'rcr',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'shl',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'shr',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 >>= $op2'),
  itab_entry ( 'shl',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'sar',           O_Eb,    O_I1,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ->>= $op2;'),
]

itab__1byte__op_d1__reg = [
  itab_entry ( 'rol',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate($op1, $op2)'),
  itab_entry ( 'ror',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate($op1, $op2)'),
  itab_entry ( 'rcl',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'rcr',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'shl',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'shr',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 >>= $op2'),
  itab_entry ( 'shl',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'sar',           O_Ev,    O_I1,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ->>= $op2;'),
]

itab__1byte__op_d2__reg = [
  itab_entry ( 'rol',           O_Eb,    O_CL,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate($op1, $op2)'),
  itab_entry ( 'ror',           O_Eb,    O_CL,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate($op1, $op2)'),
  itab_entry ( 'rcl',           O_Eb,    O_CL,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'rcr',           O_Eb,    O_CL,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'shl',           O_Eb,    O_CL,    O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'shr',           O_Eb,    O_CL,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 >>= $op2'),
  itab_entry ( 'shl',           O_Eb,    O_CL,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'sar',           O_Eb,    O_CL,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ->>= $op2;'),
]

itab__1byte__op_d3__reg = [
  itab_entry ( 'rol',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate($op1, $op2)'),
  itab_entry ( 'ror',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate($op1, $op2)'),
  itab_entry ( 'rcl',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_left_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'rcr',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = bit_right_rotate_with_carry($op1, $op2)'),
  itab_entry ( 'shl',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'shr',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 >>= $op2'),
  itab_entry ( 'shl',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 <<= $op2'),
  itab_entry ( 'sar',           O_Ev,    O_CL,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 ->>= $op2;'),
]

itab__1byte__op_d8__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D8__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D8__MOD__OP_01__X87, ),
]

itab__1byte__op_d8__mod__op_00__reg = [
  itab_entry ( 'fadd',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_d8__mod__op_01__x87 = [
  itab_entry ( 'fadd',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__1byte__op_d9__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D9__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_D9__MOD__OP_01__X87, ),
]

itab__1byte__op_d9__mod__op_00__reg = [
  itab_entry ( 'fld',           O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fst',           O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fldenv',        O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fldcw',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fnstenv',       O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fnstcw',        O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_d9__mod__op_01__x87 = [
  itab_entry ( 'fld',           O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fld',           O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch',          O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fnop',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fstp1',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp1',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fchs',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'ftst',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxam',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fld1',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fldl2t',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fldl2e',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fldlpi',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fldlg2',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fldln2',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fldz',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fyl2x',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fptan',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fpatan',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fpxtract',      O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fprem1',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdecstp',       O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fncstp',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fprem',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fyl2xp1',       O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsqrt',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsincos',       O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'frndint',       O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fscale',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsin',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcos',          O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__1byte__op_da__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DA__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DA__MOD__OP_01__X87, ),
]

itab__1byte__op_da__mod__op_00__reg = [
  itab_entry ( 'fiadd',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fimul',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'ficom',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'ficomp',        O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisub',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisubr',        O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fidiv',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fidivr',        O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_da__mod__op_01__x87 = [
  itab_entry ( 'fcmovb',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovb',        O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmove',        O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovbe',       O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovu',        O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fucompp',       O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_db__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DB__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DB__MOD__OP_01__X87, ),
]

itab__1byte__op_db__mod__op_00__reg = [
  itab_entry ( 'fild',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisttp',        O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fist',          O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fistp',         O_Md,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fld',           O_Mt,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fstp',          O_Mt,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_db__mod__op_01__x87 = [
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnb',       O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovne',       O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnbe',      O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcmovnu',       O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fclex',         O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fninit',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fucomi',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomi',        O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomi',         O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_dc__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DC__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DC__MOD__OP_01__X87, ),
]

itab__1byte__op_dc__mod__op_00__reg = [
  itab_entry ( 'fadd',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fcom',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fcomp',         O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_dc__mod__op_01__x87 = [
  itab_entry ( 'fadd',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fadd',          O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmul',          O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcom2',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp3',        O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubr',         O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsub',          O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivr',         O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdiv',          O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__1byte__op_dd__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DD__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DD__MOD__OP_01__X87, ),
]

itab__1byte__op_dd__mod__op_00__reg = [
  itab_entry ( 'fld',           O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisttp',        O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'frstor',        O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fnsave',        O_M,     O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fnstsw',        O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_dd__mod__op_01__x87 = [
  itab_entry ( 'ffree',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffree',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch4',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fst',           O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp',          O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucom',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomp',        O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_de__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DE__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DE__MOD__OP_01__X87, ),
]

itab__1byte__op_de__mod__op_00__reg = [
  itab_entry ( 'fiadd',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fimul',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'ficom',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'ficomp',        O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisub',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisubr',        O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fidiv',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fidivr',        O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_de__mod__op_01__x87 = [
  itab_entry ( 'faddp',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'faddp',         O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fmulp',         O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomp5',        O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fcompp',        O_NONE,  O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fsubrp',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubrp',        O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fsubp',         O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivrp',        O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST1,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST2,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST3,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST4,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST5,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST6,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fdivp',         O_ST7,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
]

itab__1byte__op_df__mod = [
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DF__MOD__OP_00__REG, ),
  itab_entry ( 'grp_x87',       O_NONE, O_NONE, O_NONE,    ITAB__1BYTE__OP_DF__MOD__OP_01__X87, ),
]

itab__1byte__op_df__mod__op_00__reg = [
  itab_entry ( 'fild',          O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fisttp',        O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fist',          O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fistp',         O_Mw,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fbld',          O_Mt,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fild',          O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fbstp',         O_Mt,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'fistp',         O_Mq,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__1byte__op_df__mod__op_01__x87 = [
  itab_entry ( 'ffreep',        O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'ffreep',        O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fxch7',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp8',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST0,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST1,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST2,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST3,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST4,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST5,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST6,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fstp9',         O_ST7,   O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fnstsw',        O_AX,    O_NONE,  O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'fucomip',       O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fucomip',       O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST0,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST1,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST2,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST3,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST4,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST5,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST6,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'fcomip',        O_ST0,   O_ST7,   O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_e3__asize = [
  itab_entry ( 'jcxz',          O_Jb,    O_NONE,  O_NONE,  P_aso, 'if (cx == 0) goto $op1'),
  itab_entry ( 'jecxz',         O_Jb,    O_NONE,  O_NONE,  P_aso, 'if (ecx == 0) goto $op1'),
  itab_entry ( 'jrcxz',         O_Jb,    O_NONE,  O_NONE,  P_aso, 'if (rcx == 0) goto $op1'),
]

itab__1byte__op_f6__reg = [
  itab_entry ( 'test',          O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'test',          O_Eb,    O_Ib,    O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'not',           O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = ~$op1'),
  itab_entry ( 'neg',           O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = ~$op1 + 1'),
  itab_entry ( 'mul',           O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'edx:eax = eax * $op1'),
  itab_entry ( 'imul',          O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 *= $op2 * $op3'),
  itab_entry ( 'div',           O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'eax /= $op1; edx %= $op1'),
  itab_entry ( 'idiv',          O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, 'eax /= $op1; edx %= $op1'),
]

itab__1byte__op_f7__reg = [
  itab_entry ( 'test',          O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'test',          O_Ev,    O_Iz,    O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eflags._f = $op1 & $op2'),
  itab_entry ( 'not',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = ~$op1'),
  itab_entry ( 'neg',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 = ~$op1 + 1'),
  itab_entry ( 'mul',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'edx:eax = eax * $op1'),
  itab_entry ( 'imul',          O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1 *= $op2 * $op3'),
  itab_entry ( 'div',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eax /= $op1; edx %= $op1'),
  itab_entry ( 'idiv',          O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'eax /= $op1; edx %= $op1'),
]

itab__1byte__op_fe__reg = [
  itab_entry ( 'inc',           O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1++'),
  itab_entry ( 'dec',           O_Eb,    O_NONE,  O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1}--'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__1byte__op_ff__reg = [
  itab_entry ( 'inc',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '$op1++'),
  itab_entry ( 'dec',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1}--'),
  itab_entry ( 'call',          O_Ev,    O_NONE,  O_NONE,  P_c1|P_def64|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'call $op1'),
  itab_entry ( 'call',          O_Ep,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'call $op1'),
  itab_entry ( 'jmp',           O_Ev,    O_NONE,  O_NONE,  P_c1|P_def64|P_depM|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'goto $op1'),
  itab_entry ( 'jmp',           O_Ep,    O_NONE,  O_NONE,  P_c1|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, 'goto $op1'),
  itab_entry ( 'push',          O_Ev,    O_NONE,  O_NONE,  P_c1|P_def64|P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} => stack'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__3dnow = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_sse66__0f = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movupd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movupd',        O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movlpd',        O_V,     O_M,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movlpd',        O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'unpcklpd',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'unpckhpd',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movhpd',        O_V,     O_M,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movhpd',        O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movapd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movapd',        O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtpi2pd',      O_V,     O_Q,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movntpd',       O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvttpd2pi',     O_P,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtpd2pi',      O_P,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'ucomisd',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'comisd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movmskpd',      O_Gd,    O_VR,    O_NONE,  P_oso|P_rexr|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'sqrtpd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'andpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'andnpd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'orpd',          O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'xorpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'addpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'mulpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtpd2ps',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtps2dq',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'subpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'minpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'divpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'maxpd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpcklbw',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpcklwd',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckldq',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'packsswb',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpgtb',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpgtw',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpgtd',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'packuswb',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhbw',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhwd',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhdq',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'packssdw',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpcklqdq',    O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhqdq',    O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movd',          O_V,     O_Ex,    O_NONE,  P_c2|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movqa',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pshufd',        O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSE66__0F__OP_71__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSE66__0F__OP_72__REG, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSE66__0F__OP_73__REG, ),
  itab_entry ( 'pcmpeqb',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpeqw',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pcmpeqd',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'haddpd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'hsubpd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movd',          O_Ex,    O_V,     O_NONE,  P_c1|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movdqa',        O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'xadd',          O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xadd',          O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'cmppd',         O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'pinsrw',        O_V,     O_Ew,    O_Ib,    P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pextrw',        O_Gd,    O_VR,    O_Ib,    P_aso|P_rexr|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'shufpd',        O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSE66__0F__OP_C7__REG, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'addsubpd',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrlw',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrld',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrlq',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddq',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmullw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movq',          O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmovmskb',      O_Gd,    O_VR,    O_NONE,  P_rexr|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubusb',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubusw',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pminub',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pand',          O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubusb',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'punpckhbw',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmaxub',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pandn',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pavgb',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psraw',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrad',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pavgw',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmulhuw',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmulhw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvttpd2dq',     O_V,     O_W,     O_NONE,  P_none, '${op1} = ${op2}'),
  itab_entry ( 'movntdq',       O_M,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubsb',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubsw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pminsw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'por',           O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddsb',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddsw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmaxsw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pxor',          O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psllw',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pslld',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psllq',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmuludq',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pmaddwd',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psadbw',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'maskmovq',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubb',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubw',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psubq',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddb',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'paddw',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_sse66__0f__op_71__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrlw',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psraw',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psllw',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_sse66__0f__op_72__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrld',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrad',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'pslld',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_sse66__0f__op_73__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psrlq',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'psrldq',        O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'psllq',         O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pslldq',        O_VR,    O_Ib,    O_NONE,  P_rexb, '${op1} = ${op2}'),
]

itab__pfx_sse66__0f__op_c7__reg = [
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSE66__0F__OP_C7__REG__OP_00__VENDOR, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_sse66__0f__op_c7__reg__op_00__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmclear',       O_Mq,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

itab__pfx_ssef2__0f = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '*((uint32_t *)(ds:esi)) = *((uint32_t *)(es:edi))'),
  itab_entry ( 'movsd',         O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '*((uint32_t *)(ds:esi)) = *((uint32_t *)(es:edi))'),
  itab_entry ( 'movddup',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cvtsi2sd',      O_V,     O_Ex,    O_NONE,  P_c2|P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cvttsd2si',     O_Gvw,   O_W,     O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtsd2si',      O_Gvw,   O_W,     O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'sqrtsd',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'addsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'mulsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtsd2ss',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'subsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'minsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'divsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'maxsd',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'pshuflw',       O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'haddps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'hsubps',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'xadd',          O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xadd',          O_Ev,    O_Gv,    O_NONE,  P_aso|P_oso|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'cmpsd',         O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'addsubps',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movdq2q',       O_P,     O_VR,    O_NONE,  P_aso|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cvtpd2dq',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'lddqu',         O_V,     O_M,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_ssef3__0f = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movss',         O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movsldup',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movshdup',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cvtsi2ss',      O_V,     O_Ex,    O_NONE,  P_c2|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cvttss2si',     O_Gvw,   O_W,     O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtss2si',      O_Gvw,   O_W,     O_NONE,  P_c1|P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'sqrtss',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'rsqrtss',       O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'rcpss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'addss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'mulss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvtss2sd',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'cvttps2dq',     O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'subss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'minss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'divss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'maxss',         O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movdqu',        O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'pshufhw',       O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movq',          O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'movdqu',        O_W,     O_V,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'xadd',          O_Eb,    O_Gb,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'xadd',          O_Ev,    O_Gv,    O_NONE,  P_aso|P_rexw|P_rexr|P_rexx|P_rexb, '_temp = $op1 + op2; $op2 = $op1; $op1 = _temp'),
  itab_entry ( 'cmpss',         O_V,     O_W,     O_Ib,    P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_reg',       O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSEF3__0F__OP_C7__REG, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'movq2dq',       O_V,     O_PR,    O_NONE,  P_aso, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'cvtdq2pd',      O_V,     O_W,     O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
]

itab__pfx_ssef3__0f__op_c7__reg = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'grp_vendor',    O_NONE, O_NONE, O_NONE,    ITAB__PFX_SSEF3__0F__OP_C7__REG__OP_07__VENDOR, ),
]

itab__pfx_ssef3__0f__op_c7__reg__op_07__vendor = [
  itab_entry ( 'invalid',       O_NONE, O_NONE, O_NONE,    P_none, ),
  itab_entry ( 'vmxon',         O_Mq,    O_NONE,  O_NONE,  P_aso|P_rexr|P_rexx|P_rexb, '${op1} = ${op2}'),
]

# the order of this table matches itab_index 
itab_list = [
    itab__0f,
    itab__0f__op_00__reg,
    itab__0f__op_01__reg,
    itab__0f__op_01__reg__op_00__mod,
    itab__0f__op_01__reg__op_00__mod__op_01__rm,
    itab__0f__op_01__reg__op_00__mod__op_01__rm__op_01__vendor,
    itab__0f__op_01__reg__op_00__mod__op_01__rm__op_03__vendor,
    itab__0f__op_01__reg__op_00__mod__op_01__rm__op_04__vendor,
    itab__0f__op_01__reg__op_01__mod,
    itab__0f__op_01__reg__op_01__mod__op_01__rm,
    itab__0f__op_01__reg__op_02__mod,
    itab__0f__op_01__reg__op_03__mod,
    itab__0f__op_01__reg__op_03__mod__op_01__rm,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_00__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_01__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_02__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_03__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_04__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_05__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_06__vendor,
    itab__0f__op_01__reg__op_03__mod__op_01__rm__op_07__vendor,
    itab__0f__op_01__reg__op_04__mod,
    itab__0f__op_01__reg__op_06__mod,
    itab__0f__op_01__reg__op_07__mod,
    itab__0f__op_01__reg__op_07__mod__op_01__rm,
    itab__0f__op_01__reg__op_07__mod__op_01__rm__op_01__vendor,
    itab__0f__op_0d__reg,
    itab__0f__op_18__reg,
    itab__0f__op_71__reg,
    itab__0f__op_72__reg,
    itab__0f__op_73__reg,
    itab__0f__op_ae__reg,
    itab__0f__op_ae__reg__op_05__mod,
    itab__0f__op_ae__reg__op_05__mod__op_01__rm,
    itab__0f__op_ae__reg__op_06__mod,
    itab__0f__op_ae__reg__op_06__mod__op_01__rm,
    itab__0f__op_ae__reg__op_07__mod,
    itab__0f__op_ae__reg__op_07__mod__op_01__rm,
    itab__0f__op_ba__reg,
    itab__0f__op_c7__reg,
    itab__0f__op_c7__reg__op_00__vendor,
    itab__0f__op_c7__reg__op_07__vendor,
    itab__0f__op_d9__mod,
    itab__0f__op_d9__mod__op_01__x87,
    itab__1byte,
    itab__1byte__op_60__osize,
    itab__1byte__op_61__osize,
    itab__1byte__op_63__mode,
    itab__1byte__op_6d__osize,
    itab__1byte__op_6f__osize,
    itab__1byte__op_80__reg,
    itab__1byte__op_81__reg,
    itab__1byte__op_82__reg,
    itab__1byte__op_83__reg,
    itab__1byte__op_8f__reg,
    itab__1byte__op_98__osize,
    itab__1byte__op_99__osize,
    itab__1byte__op_9c__mode,
    itab__1byte__op_9c__mode__op_00__osize,
    itab__1byte__op_9c__mode__op_01__osize,
    itab__1byte__op_9d__mode,
    itab__1byte__op_9d__mode__op_00__osize,
    itab__1byte__op_9d__mode__op_01__osize,
    itab__1byte__op_a5__osize,
    itab__1byte__op_a7__osize,
    itab__1byte__op_ab__osize,
    itab__1byte__op_ad__osize,
    itab__1byte__op_ae__mod,
    itab__1byte__op_ae__mod__op_00__reg,
    itab__1byte__op_af__osize,
    itab__1byte__op_c0__reg,
    itab__1byte__op_c1__reg,
    itab__1byte__op_c6__reg,
    itab__1byte__op_c7__reg,
    itab__1byte__op_cf__osize,
    itab__1byte__op_d0__reg,
    itab__1byte__op_d1__reg,
    itab__1byte__op_d2__reg,
    itab__1byte__op_d3__reg,
    itab__1byte__op_d8__mod,
    itab__1byte__op_d8__mod__op_00__reg,
    itab__1byte__op_d8__mod__op_01__x87,
    itab__1byte__op_d9__mod,
    itab__1byte__op_d9__mod__op_00__reg,
    itab__1byte__op_d9__mod__op_01__x87,
    itab__1byte__op_da__mod,
    itab__1byte__op_da__mod__op_00__reg,
    itab__1byte__op_da__mod__op_01__x87,
    itab__1byte__op_db__mod,
    itab__1byte__op_db__mod__op_00__reg,
    itab__1byte__op_db__mod__op_01__x87,
    itab__1byte__op_dc__mod,
    itab__1byte__op_dc__mod__op_00__reg,
    itab__1byte__op_dc__mod__op_01__x87,
    itab__1byte__op_dd__mod,
    itab__1byte__op_dd__mod__op_00__reg,
    itab__1byte__op_dd__mod__op_01__x87,
    itab__1byte__op_de__mod,
    itab__1byte__op_de__mod__op_00__reg,
    itab__1byte__op_de__mod__op_01__x87,
    itab__1byte__op_df__mod,
    itab__1byte__op_df__mod__op_00__reg,
    itab__1byte__op_df__mod__op_01__x87,
    itab__1byte__op_e3__asize,
    itab__1byte__op_f6__reg,
    itab__1byte__op_f7__reg,
    itab__1byte__op_fe__reg,
    itab__1byte__op_ff__reg,
    itab__3dnow,
    itab__pfx_sse66__0f,
    itab__pfx_sse66__0f__op_71__reg,
    itab__pfx_sse66__0f__op_72__reg,
    itab__pfx_sse66__0f__op_73__reg,
    itab__pfx_sse66__0f__op_c7__reg,
    itab__pfx_sse66__0f__op_c7__reg__op_00__vendor,
    itab__pfx_ssef2__0f,
    itab__pfx_ssef3__0f,
    itab__pfx_ssef3__0f__op_c7__reg,
    itab__pfx_ssef3__0f__op_c7__reg__op_07__vendor,
]
